/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'
   
    compile "junit:junit:4.12"
    compile "org.seleniumhq.selenium:selenium-java:3.141.59"
    compile "org.testng:testng:6.14.3"
    compile "commons-io:commons-io:2.6"
	compile "org.jsoup:jsoup:1.11.3"
	compile "io.cucumber:cucumber-core:4.2.0"
	compile "io.cucumber:cucumber-java:4.2.0"
	compile "io.cucumber:cucumber-junit:4.2.0"
	compile "io.cucumber:cucumber-jvm-deps:1.0.6"
//	compile "io.cucumber:gherkin:6.0.14"
	compile "io.cucumber:gherkin:5.1.0"
	compile "org.mockito:mockito-core:2.23.4"
	
// not sure if I need this or not
// example came from https://github.com/iainrose/page-objects/blob/master/build.gradle
tasks.withType(Test) {
    useTestNG()
    systemProperties = System.getProperties()
    maxParallelForks = 2
}

task includegroup1(type: Test) {
    useTestNG() {
        includeGroups 'group1'
    
}

task excludegroup1(type: Test) {
    useTestNG() {
        excludeGroups 'group1'
    }

task wrapper(type: Wrapper) {
    gradleVersion = '1.1'
}

//trying from stack overflow
/*
tasks.withType(JavaExec) {
    if (System.getProperty('DEBUG', 'false') == 'true') {
        jvmArgs '-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=9099'
    }
}
*/
}

